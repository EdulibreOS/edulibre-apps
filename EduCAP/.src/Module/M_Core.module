' Gambas module file

' Innova Project 
' Copyright © Asociación Civil Edulibre
' Info@edulibre.com
'
' Jorge Recinos - Developer
' jrecinosd@gmail.com
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Homepage: http://http://sourceforge.net/projects/innovadesktop

Private cone As New Connection
Private ImgBtnAppsBook As PushButton
Public sMateria As String
Public sActividad As String
Public sManual As String


Public Sub LLenar_Materias(Optional grado As String)

  Dim consulta As String
  Dim rs As Result
  Dim iSizeApps As Integer
  
  consulta = "SELECT DISTINCT c.idtbl_materia ID, c.descripcion " &
              "FROM tbl_grado_materia a, " &
			        "tbl_grado b, " &
			        "tbl_materia c " &
              "WHERE a.id_grado = b.idtbl_grado " &
              "AND a.id_materia = c.idtbl_materia " &
              "AND b.descripcion = '" & grado & "' " &
              "ORDER BY c.descripcion"
  'Print consulta
    cone = MDB_Connection.Conectar()
            rs = cone.Exec(consulta)
               While (rs.Available)
                 ImgBtnAppsBook = New PushButton(Educap.IconViewMaterias) As "ButtonMaterias"
                 ImgBtnAppsBook.w = 90
                 ImgBtnAppsBook.h = 40
                 ImgBtnAppsBook.Text = rs["descripcion"]
                 'ImgBtnAppsBook.Val = rs["ID"]
                 ImgBtnAppsBook.Mouse = 13
                   'ImgBtnAppsBook.Picture = Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(30, 30).Picture
                 'Print ImgBtnAppsBook.Picture
                 'ImgBtnAppsBook.Background = Color.Transparent
                 'Try ImgBtnAppsBook.Font.Size = (M_Core.iFontSize)
                 'ImgBtnAppsBook.Font.Name = (M_Core.sFontName)
                 ImgBtnAppsBook.Tag = rs["descripcion"]
    
                 'sDel = DesktopEntry.Path
                   rs.MoveNext
               Wend

  MDB_Connection.Desconectar(cone)
  
  
End


Public Sub Llenar_Actividades(Nivel As String, Grado As String, Materia As String, Contenido As String)
  
  Dim rs As Result
  Dim consulta, aux_palabras As String
  Dim cant_palabras As Integer
  Dim Palabras As String[]
  Educap.IconViewActividades.Children.Clear
  
  Contenido = Trim(M_Busqueda.RemoveChar(Contenido, "'"))

  cant_palabras = Split(Contenido, " ").Count
  Palabras = Split(Contenido, " ")
  
  If cant_palabras > 1 Then
    
    For Each aux_palabras In Palabras
            consulta = consulta & M_Busqueda.Cadena_Consulta(Nivel, Grado, Materia, aux_palabras)
            consulta = consulta & " UNION "
    Next
            consulta = Left(consulta, -6)
            consulta = consulta & " ORDER BY a.nombre "
            'Print consulta
            cone = MDB_Connection.Conectar()
            rs = cone.Exec(consulta)
            While (rs.Available)
                 ImgBtnAppsBook = New PushButton(Educap.IconViewActividades) As "ButtonActividades"
                 ImgBtnAppsBook.w = 120
                 ImgBtnAppsBook.h = 120
                 ImgBtnAppsBook.Text = rs["Actividad"]
                 
                 'ImgBtnAppsBook.Val = rs["ID"]
                 ImgBtnAppsBook.Mouse = 13
                 If rs["Icono"] <> Null And Exist(rs["Icono"]) Then
                    ImgBtnAppsBook.Picture = Picture.Load(rs["Icono"]).Image.Stretch(50, 50).Picture
                 Else
                    ImgBtnAppsBook.Picture = Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(50, 50).Picture
                 Endif
                 'Print ImgBtnAppsBook.Picture
                 'ImgBtnAppsBook.Background = Color.Transparent
                 'Try ImgBtnAppsBook.Font.Size = (M_Core.iFontSize)
                 'ImgBtnAppsBook.Font.Name = (M_Core.sFontName)
                 ImgBtnAppsBook.Tag = rs["ID"]
    
                 'sDel = DesktopEntry.Path
                   rs.MoveNext
               Wend
          MDB_Connection.Desconectar(cone)
  Else 'Si es una sola palabra en el contenido se realiza una sola busqueda
    
        consulta = M_Busqueda.Cadena_Consulta(Nivel, Grado, Materia, Contenido)
        consulta = consulta & " ORDER BY a.nombre "
        cone = MDB_Connection.Conectar()
        rs = cone.Exec(consulta)
           While (rs.Available)
                 ImgBtnAppsBook = New PushButton(Educap.IconViewActividades) As "ButtonActividades"
                 ImgBtnAppsBook.w = 120
                 ImgBtnAppsBook.h = 120
                 ImgBtnAppsBook.Text = rs["Actividad"]
                 'ImgBtnAppsBook.Val = rs["ID"]
                 ImgBtnAppsBook.Mouse = 13
                 If rs["Icono"] <> Null And Exist(rs["Icono"]) Then
                    ImgBtnAppsBook.Picture = Picture.Load(rs["Icono"]).Image.Stretch(50, 50).Picture
                 Else
                    ImgBtnAppsBook.Picture = Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(50, 50).Picture
                 Endif
                 'Print ImgBtnAppsBook.Picture
                 'ImgBtnAppsBook.Background = Color.Transparent
                 'Try ImgBtnAppsBook.Font.Size = (M_Core.iFontSize)
                 'ImgBtnAppsBook.Font.Name = (M_Core.sFontName)
                 ImgBtnAppsBook.Tag = rs["ID"]
    
                 'sDel = DesktopEntry.Path
                   rs.MoveNext
               Wend
        MDB_Connection.Desconectar(cone)
    
  Endif
  
End

Public Sub Llenar_Manuales(Grado As String, Materia As String, Programa As String)
  
  Dim rs As Result
  Dim consulta, aux_palabras, consultag, consultam, consultap As String
  Dim cant_palabras As Integer
  Dim Palabras As String[]
  Educap.scrollvManuales.Children.Clear
  
    If Grado <> "" Then
    
      consultag = "AND gra.descripcion = '" & Grado & "' "
    
    Endif
  
    If Materia <> "" Then
    
      consultam = "AND mat.descripcion = '" & Materia & "' "
    
    Endif
  
    If Programa <> "" Then
    
      consultap = "AND prog.descripcion = '" & Programa & "' "
    
    Endif
    
        consulta = "SELECT DISTINCT tut.*, prog.descripcion as programa, prog.url_icono as icono " &
               "FROM tbl_tutorial tut, " &
               "tbl_programa prog, " &
               "tbl_actividad act, " &
               "tbl_grado_materia gm, " &
               "tbl_grado gra, " &
               "tbl_materia mat " &
               "WHERE tut.id_programa = prog.idtbl_programa " &
               "AND prog.idtbl_programa = act.id_programa " &
               "AND act.idtbl_actividad = gm.id_actividad " &
               "AND gm.id_grado = gra.idtbl_grado " &
               "AND gm.id_materia = mat.idtbl_materia " & consultag & consultam & consultap &
               " ORDER BY tut.descripcion "
            'Print consulta
            cone = MDB_Connection.Conectar()
            rs = cone.Exec(consulta)
            While (rs.Available)
                 ImgBtnAppsBook = New PushButton(Educap.scrollvManuales) As "ButtonManuales"
                 ImgBtnAppsBook.w = 120
                 ImgBtnAppsBook.h = 120
                 ImgBtnAppsBook.Text = rs["nombre"]
                 
                 'ImgBtnAppsBook.Val = rs["ID"]
                 ImgBtnAppsBook.Mouse = 13
                 If rs["icono"] <> Null And Exist(rs["icono"]) Then
                    ImgBtnAppsBook.Picture = Picture.Load(rs["icono"]).Image.Stretch(50, 50).Picture
                 Else
                    ImgBtnAppsBook.Picture = Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(50, 50).Picture
                 Endif
                 'Print ImgBtnAppsBook.Picture
                 'ImgBtnAppsBook.Background = Color.Transparent
                 'Try ImgBtnAppsBook.Font.Size = (M_Core.iFontSize)
                 'ImgBtnAppsBook.Font.Name = (M_Core.sFontName)
                 ImgBtnAppsBook.Tag = rs["idtbl_tutorial"]
    
                 'sDel = DesktopEntry.Path
                   rs.MoveNext
               Wend
          MDB_Connection.Desconectar(cone)  
End

Public Sub ButtonMaterias_Click()
  
  sMateria = Last.Tag
  Educap.lbl_selectmateria.Text = sMateria
  Llenar_Actividades(Educap.lblmnuprincipal.Text, Educap.lbl_grado.Text, Educap.lbl_selectmateria.Text, "")
  Educap.txt_busqueda.Text = ""
  Educap.lbl_sMateria.Text = sMateria
End

Public Sub ButtonActividades_Click()
  
   sActividad = Last.Tag
   EduCap.active_pnl_grados(False)
   EduCap.active_pnl_portada(False)
   EduCap.active_pnl_grado(False)
   EduCap.active_pnl_actividades(True)
   LlenarGvInfo(sActividad)
   'Print sActividad
End

Public Sub ButtonManuales_Click()
  
  Dim rs As Result
  Dim consulta, url, manual As String
  
  sManual = Last.Tag
  'Print sManual
  
  consulta = "SELECT url, nombre FROM tbl_tutorial WHERE idtbl_tutorial = " & sManual
  cone = MDB_Connection.Conectar()
  rs = cone.Exec(consulta)

  url = Application.path & "/Tutorial/" & sManual & "/" & rs["url"]
  manual = rs["nombre"]
  Message.Info("El Tutorial de " & manual & " se abrirá en breve, por favor espere.", "OK")
  Shell "evince " & url
  'Print url
   'M_Log.Set_Log(Null, Null, Null, Null, "Abrir Programa", EdulibCap.lbl_user.Text, lst_iconos.Current.Key)
  
End



Public Sub ObtenerImagen(id_actividad As String)
  
  'EdulibCap.picbox1.Picture = Picture.Load(Application.path &/ "Images/2/1.png")
  'EdulibCap.picbox2.Picture = Picture.Load(Application.path &/ "Images/2/2.png")
  
  'Estos de abajo son lo que deben de quedar.
  Try EduCap.pboxAct1.Picture = Picture.Load(Desktop.ConfigDir &/ "/Innova/Educap/Images/" &/ id_actividad &/ "1.png")
  Try Educap.pboxAct2.Picture = Picture.Load(Desktop.ConfigDir &/ "/Innova/Educap/Images/" &/ id_actividad &/ "2.png")
  
End

Public Sub LlenarGvInfo(id_actividad As String)
  
    Dim rs As Result
    Dim consulta As String
    Dim crow As Integer
    Dim Grado As String
    Dim Nivel As String
    Dim Materia As String
    
    If EduCap.lblmnuprincipal.Text == "" Then
      Nivel = ""
    Else
      Nivel = "AND n.descripcion = '" & EduCap.lblmnuprincipal.Text & "' "
     Endif
      
    If EduCap.lbl_grado.Text == "" Then
        Grado = ""
    Else 
      Grado = "AND g.descripcion = '" & EduCap.lbl_grado.Text & "' "
    Endif

    If EduCap.lbl_selectmateria.Text == "" Then
    Materia = ""
    Else 
      Materia = "AND m.descripcion = '" & EduCap.lbl_selectmateria.Text & "' "
    Endif
    
    consulta = "SELECT distinct c.descripcion as Categoria, " &
               					"p.nombre As Programa, " &
               					"a.nombre As Actividad, " &
               					"a.descripcion As DescActividad, " &
               					"n.descripcion As Nivel, " &
               					"g.descripcion As Grado, " &
               					"m.descripcion As Materia, " &
               					"cg.no_competencia As NoCompetencia, " &
               					"cg.descripcion As Competencia, " &
               					"ig.no_indicador_grado As NoIndicador, " &
               					"ig.descripcion As Indicador, " &
               					"cont.no_contenido As NoContenido, " &
               					"cont.descripcion As Contenido, " &
               					"p.url_icono As Icono, " &
               					"p.url_exe As Url_exe, " &
               					"tut.url As urlmanual, " &
               					"tut.idtbl_tutorial As idmanual " &
              "FROM tbl_actividad a, " &
              		"tbl_grado_materia gm, " &
              		"tbl_grado g, " &
              		"tbl_materia m, " &
              		"tbl_nivel n, " &
              		"tbl_programa p, " &
              		"tbl_categoria c, " &
              		"tbl_competencia_grado cg, " &
              		"tbl_indicador_grado ig, " &
              		"tbl_contenido cont, " &
              		"tbl_tutorial tut " &
              "WHERE a.idtbl_actividad = " & id_actividad & " " &
              "AND a.idtbl_actividad = gm.id_actividad " &
              "AND gm.id_grado = g.idtbl_grado " &
              "AND gm.id_materia = m.idtbl_materia " &
              "AND g.id_nivel = n.idtbl_nivel " &
              Nivel & Grado & Materia &
              "AND a.id_programa = p.idtbl_programa " &
              "AND tut.id_programa = p.idtbl_programa "
              "AND p.id_categoria = c.idtbl_categoria " &
              "AND cg.id_actividad = a.idtbl_actividad " &
              "AND ig.id_competencia_grado = cg.idtbl_competencia_grado " &
              "AND cont.id_indicador_grado = ig.idtbl_indicador_grado " &
              "AND cg.id_nivel = n.idtbl_nivel " &
              "AND cg.id_grado = g.idtbl_grado " &
              "AND cg.id_materia = m.idtbl_materia "
              
              
   Print consulta

    cone = MDB_Connection.Conectar()
    
            'EdulibCap.lst_iconos[id_actividad].Selected = True
            EduCap.tvCompetencias.Columns.count = 6
            EduCap.tvCompetencias.Rows.Resizable = True
            EduCap.tvCompetencias.Columns.Resizable = True
            EduCap.tvCompetencias.Columns[0].Text = "No."
            EduCap.tvCompetencias.Columns[0].Width = 40
            EduCap.tvCompetencias.Columns[0].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[1].Text = "Competencia de Grado"
            EduCap.tvCompetencias.Columns[1].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[1].Width = 200
            EduCap.tvCompetencias.Columns[2].Text = "No."
            EduCap.tvCompetencias.Columns[2].Width = 40
            EduCap.tvCompetencias.Columns[2].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[3].Text = "Indicador de Logro"
            EduCap.tvCompetencias.Columns[3].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[3].Width = 200
            EduCap.tvCompetencias.Columns[4].Text = "No."
            EduCap.tvCompetencias.Columns[4].Width = 40
            EduCap.tvCompetencias.Columns[4].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[5].Text = "Contenido"
            EduCap.tvCompetencias.Columns[5].Alignment = Align.Center
            crow = 0
    
    rs = cone.Exec(consulta)
    
       While (rs.Available)
             EduCap.tvCompetencias.Rows.count = crow + 1
             EduCap.tvCompetencias.rows[crow].Height = 170
             EduCap.lblACategoria.Text = rs["Categoria"]
             EduCap.lblAProgra.Text = rs["Programa"]
             EduCap.lbl_programaact.Text = rs["Programa"]
             EduCap.lblidmanual.Text = rs["idmanual"]
             Educap.lblmanualexe.Text = rs["urlmanual"]
             EduCap.lbl_nombreact.Text = rs["Actividad"]
             EduCap.lbl_ADesc.Text = rs["DescActividad"]
             EduCap.lblANivel.Text = rs["Nivel"]
             EduCap.lblAGrado.Text = rs["Grado"]
             EduCap.lblAMateria.Text = rs["Materia"]
             EduCap.btn_regresargrado.Text = "Regresar a " & rs["Grado"]
             EduCap.tvCompetencias[crow, 0].Text = rs["NoCompetencia"]
             EduCap.tvCompetencias[crow, 0].WordWrap = True
             EduCap.tvCompetencias[crow, 0].Alignment = Align.left
             EduCap.tvCompetencias[crow, 1].Text = rs["Competencia"]
             EduCap.tvCompetencias[crow, 1].WordWrap = True
             EduCap.tvCompetencias[crow, 1].Alignment = Align.left
             EduCap.tvCompetencias[crow, 2].Text = rs["NoIndicador"]
             EduCap.tvCompetencias[crow, 2].WordWrap = True
             EduCap.tvCompetencias[crow, 2].Alignment = Align.left
             EduCap.tvCompetencias[crow, 3].Text = rs["Indicador"]
             EduCap.tvCompetencias[crow, 3].WordWrap = True
             EduCap.tvCompetencias[crow, 3].Alignment = Align.left
             EduCap.tvCompetencias[crow, 4].Text = rs["NoContenido"]
             EduCap.tvCompetencias[crow, 4].WordWrap = True
             EduCap.tvCompetencias[crow, 4].Alignment = Align.left
             EduCap.tvCompetencias[crow, 5].Text = rs["Contenido"]
             EduCap.tvCompetencias[crow, 5].WordWrap = True
             EduCap.tvCompetencias[crow, 5].Alignment = Align.left
             If rs["Icono"] <> Null And Exist(rs["Icono"]) Then
                  EduCap.pbox_actividades.Picture = Picture.Load(rs["Icono"]).Image.Stretch(40, 40).Picture
              Else
                  EduCap.pbox_actividades.Picture = Picture.Load(Desktop.ConfigDir & "/Innova/Educap/Images/edulogo.jpeg").Image.Stretch(40, 40).Picture
              Endif
             EduCap.lblprogexe.Text = rs["Url_exe"]
             crow = crow + 1
             rs.MoveNext
       Wend    
  MDB_Connection.Desconectar(cone)
  ObtenerImagen(id_actividad)
  
End

Public Sub LlenarGvInfoName(actividad As String)
  
    Dim rs As Result
    Dim consulta As String
    Dim crow As Integer
    Dim Grado As String
    Dim Nivel As String
    Dim Materia As String
    
    If EduCap.lblmnuprincipal.Text == "" Then
      Nivel = ""
    Else
      Nivel = "AND n.descripcion = '" & EduCap.lblmnuprincipal.Text & "' "
     Endif
      
    If EduCap.lbl_grado.Text == "" Then
        Grado = ""
    Else 
      Grado = "AND g.descripcion = '" & EduCap.lbl_grado.Text & "' "
    Endif

    If EduCap.lbl_selectmateria.Text == "" Then
    Materia = ""
    Else 
      Materia = "AND m.descripcion = '" & EduCap.lbl_selectmateria.Text & "' "
    Endif
    
    consulta = "SELECT distinct c.descripcion as Categoria, " &
               					"p.nombre As Programa, " &
               					"a.nombre As Actividad, " &
               					"a.descripcion As DescActividad, " &
               					"a.idtbl_actividad As id_actividad, " &
               					"n.descripcion As Nivel, " &
               					"g.descripcion As Grado, " &
               					"m.descripcion As Materia, " &
               					"cg.no_competencia As NoCompetencia, " &
               					"cg.descripcion As Competencia, " &
               					"ig.no_indicador_grado As NoIndicador, " &
               					"ig.descripcion As Indicador, " &
               					"cont.no_contenido As NoContenido, " &
               					"cont.descripcion As Contenido, " &
               					"p.url_icono As Icono, " &
               					"p.url_exe As Url_exe, " &
               					"tut.url As urlmanual, " &
               					"tut.idtbl_tutorial As idmanual " &
              "FROM tbl_actividad a, " &
              		"tbl_grado_materia gm, " &
              		"tbl_grado g, " &
              		"tbl_materia m, " &
              		"tbl_nivel n, " &
              		"tbl_programa p, " &
              		"tbl_categoria c, " &
              		"tbl_competencia_grado cg, " &
              		"tbl_indicador_grado ig, " &
              		"tbl_contenido cont, " &
              		"tbl_tutorial tut " &
              "WHERE a.descripcion = '" & actividad & "' " &
              "AND a.idtbl_actividad = gm.id_actividad " &
              "AND gm.id_grado = g.idtbl_grado " &
              "AND gm.id_materia = m.idtbl_materia " &
              "AND g.id_nivel = n.idtbl_nivel " &
              Nivel & Grado & Materia &
              "AND a.id_programa = p.idtbl_programa " &
              "AND tut.id_programa = p.idtbl_programa "
              "AND p.id_categoria = c.idtbl_categoria " &
              "AND cg.id_actividad = a.idtbl_actividad " &
              "AND ig.id_competencia_grado = cg.idtbl_competencia_grado " &
              "AND cont.id_indicador_grado = ig.idtbl_indicador_grado " &
              "AND cg.id_nivel = n.idtbl_nivel " &
              "AND cg.id_grado = g.idtbl_grado " &
              "AND cg.id_materia = m.idtbl_materia "
              
              
   Print consulta

    cone = MDB_Connection.Conectar()
    
            'EdulibCap.lst_iconos[id_actividad].Selected = True
            EduCap.tvCompetencias.Columns.count = 6
            EduCap.tvCompetencias.Rows.Resizable = True
            EduCap.tvCompetencias.Columns.Resizable = True
            EduCap.tvCompetencias.Columns[0].Text = "No."
            EduCap.tvCompetencias.Columns[0].Width = 40
            EduCap.tvCompetencias.Columns[0].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[1].Text = "Competencia de Grado"
            EduCap.tvCompetencias.Columns[1].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[1].Width = 200
            EduCap.tvCompetencias.Columns[2].Text = "No."
            EduCap.tvCompetencias.Columns[2].Width = 40
            EduCap.tvCompetencias.Columns[2].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[3].Text = "Indicador de Logro"
            EduCap.tvCompetencias.Columns[3].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[3].Width = 200
            EduCap.tvCompetencias.Columns[4].Text = "No."
            EduCap.tvCompetencias.Columns[4].Width = 40
            EduCap.tvCompetencias.Columns[4].Alignment = Align.Center
            EduCap.tvCompetencias.Columns[5].Text = "Contenido"
            EduCap.tvCompetencias.Columns[5].Alignment = Align.Center
            crow = 0
    
    rs = cone.Exec(consulta)
    
       While (rs.Available)
             EduCap.tvCompetencias.Rows.count = crow + 1
             EduCap.tvCompetencias.rows[crow].Height = 170
             EduCap.lblACategoria.Text = rs["Categoria"]
             EduCap.lblAProgra.Text = rs["Programa"]
             EduCap.lbl_programaact.Text = rs["Programa"]
             EduCap.lblidmanual.Text = rs["idmanual"]
             Educap.lblmanualexe.Text = rs["urlmanual"]
             EduCap.lbl_nombreact.Text = rs["Actividad"]
             EduCap.lbl_ADesc.Text = rs["DescActividad"]
             EduCap.lblANivel.Text = rs["Nivel"]
             EduCap.lblAGrado.Text = rs["Grado"]
             EduCap.lblAMateria.Text = rs["Materia"]
             EduCap.btn_regresargrado.Text = "Regresar a " & rs["Grado"]
             EduCap.tvCompetencias[crow, 0].Text = rs["NoCompetencia"]
             EduCap.tvCompetencias[crow, 0].WordWrap = True
             EduCap.tvCompetencias[crow, 0].Alignment = Align.left
             EduCap.tvCompetencias[crow, 1].Text = rs["Competencia"]
             EduCap.tvCompetencias[crow, 1].WordWrap = True
             EduCap.tvCompetencias[crow, 1].Alignment = Align.left
             EduCap.tvCompetencias[crow, 2].Text = rs["NoIndicador"]
             EduCap.tvCompetencias[crow, 2].WordWrap = True
             EduCap.tvCompetencias[crow, 2].Alignment = Align.left
             EduCap.tvCompetencias[crow, 3].Text = rs["Indicador"]
             EduCap.tvCompetencias[crow, 3].WordWrap = True
             EduCap.tvCompetencias[crow, 3].Alignment = Align.left
             EduCap.tvCompetencias[crow, 4].Text = rs["NoContenido"]
             EduCap.tvCompetencias[crow, 4].WordWrap = True
             EduCap.tvCompetencias[crow, 4].Alignment = Align.left
             EduCap.tvCompetencias[crow, 5].Text = rs["Contenido"]
             EduCap.tvCompetencias[crow, 5].WordWrap = True
             EduCap.tvCompetencias[crow, 5].Alignment = Align.left
             EduCap.lbl_app.Text = rs["id_actividad"]
             If rs["Icono"] <> Null And Exist(rs["Icono"]) Then
                  EduCap.pbox_actividades.Picture = Picture.Load(rs["Icono"]).Image.Stretch(40, 40).Picture
              Else
                  EduCap.pbox_actividades.Picture = Picture.Load(Desktop.ConfigDir & "/Innova/Educap/Images/edulogo.jpeg").Image.Stretch(40, 40).Picture
              Endif
             EduCap.lblprogexe.Text = rs["Url_exe"]
             crow = crow + 1
             rs.MoveNext
       Wend    
  MDB_Connection.Desconectar(cone)
  ObtenerImagen(EduCap.lbl_app.Text)
  
End

Public Sub ObtenerComboGrado(id_nivel As String)
  
  Dim rs As Result
  Dim consulta As String
  
  Educap.CmbMGrado.Clear
  Educap.CmbMGrado.Add("Todos", "0")
    
    consulta = "SELECT * " &
              "FROM tbl_grado " &
              "WHERE id_nivel = " & id_nivel & " " &
              "ORDER BY idtbl_grado asc"
    'Print consulta
    
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             Educap.CmbMGrado.Add(rs["descripcion"], rs["idtbl_grado"])
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerComboMateria(grado As String)
  
  Dim rs As Result
  Dim consulta As String
  
  Educap.CmbMMateria.Clear
  Educap.CmbMMateria.Add("Todos", "0")
    
    If grado <> "" Then
      
      consulta = "SELECT distinct m.* " &
                  "FROM tbl_grado g, " &
                  "tbl_grado_materia gm, " &
                  "tbl_materia m " &
                  "where g.idtbl_grado = gm.id_grado " &
                  "AND gm.id_materia = m.idtbl_materia " &
                  "AND g.descripcion = '" & grado & "' " &
                  "ORDER BY m.descripcion asc"
    'Print consulta
    Else
      
      consulta = "SELECT distinct m.* " &
                "FROM tbl_materia m " &
                "ORDER BY m.descripcion asc"
      
    Endif
    
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             Educap.CmbMMateria.Add(rs["descripcion"], rs["idtbl_materia"])
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerComboPrograma()
  
  Dim rs As Result
  Dim consulta As String
  
  Educap.CmbMPrograma.Clear
  Educap.CmbMPrograma.Add("Todos", "0")
    
    consulta = "SELECT * " &
              "FROM tbl_programa " &
              "ORDER BY descripcion asc"
    'Print consulta
    
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             Educap.CmbMPrograma.Add(rs["descripcion"], rs["idtbl_programa"])
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End
