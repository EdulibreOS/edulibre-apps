' Gambas module file

' Innova Project 
' Copyright © Asociación Civil Edulibre
' Info@edulibre.com
'
' Jorge Recinos - Developer
' jrecinosd@gmail.com
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor,
' Boston, MA  02110-1301  USA

' Homepage: http://http://sourceforge.net/projects/innovadesktop


Private cone As New Connection

Public Sub ObtenerCmbNivel()
  Dim rs As Result
  Dim consulta As String
    
    consulta = "SELECT * " &
              "FROM tbl_nivel " & 
              "ORDER BY idtbl_nivel asc"
    
    cone = MDB_Connection.Conectar()
    
              EdulibCap.cmb_bnivel.Add("Todos", "0")
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             EdulibCap.cmb_bnivel.Add(rs["descripcion"], rs["idtbl_nivel"])
             rs.MoveNext
       Wend
       
     MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerCmbGrado(id_nivel As Integer)
  
  Dim rs As Result
  Dim consulta As String
  
  EdulibCap.cmb_bgrado.Clear
  EdulibCap.cmb_bgrado.Add("Todos", "0")
    
    consulta = "SELECT * " &
              "FROM tbl_grado " &
              "WHERE id_nivel = " & id_nivel & " " &
              "ORDER BY idtbl_grado asc"
    'Print consulta
    
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             EdulibCap.cmb_bgrado.Add(rs["descripcion"], rs["idtbl_grado"])
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerCmbMateria(grado As String)
  
  Dim rs As Result
  Dim consulta As String
  
  EdulibCap.cmb_bmateria.Clear
  EdulibCap.cmb_bmateria.Add("Todos", "0")
    
    consulta = "SELECT m.* " &
              "FROM tbl_grado g, " &
              "tbl_grado_materia gm, " &
              "tbl_materia m " &
              "where g.idtbl_grado = gm.id_grado " &
              "AND gm.id_materia = m.idtbl_materia " &
              "AND g.descripcion = '" & grado & "' " &
              "ORDER BY g.descripcion, m.descripcion"
    'Print consulta
    
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
             EdulibCap.cmb_bmateria.Add(rs["descripcion"], rs["idtbl_materia"])
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerImagen(id_actividad As String)
  
  'EdulibCap.picbox1.Picture = Picture.Load(Application.path &/ "Images/2/1.png")
  'EdulibCap.picbox2.Picture = Picture.Load(Application.path &/ "Images/2/2.png")
  
  'Estos de abajo son lo que deben de quedar.
  Try EdulibCap.picbox1.Picture = Picture.Load(Application.path &/ "Images/" &/ id_actividad &/ "1.png")
  Try EdulibCap.picbox2.Picture = Picture.Load(Application.path &/ "Images/" &/ id_actividad &/ "2.png")
  
End

Public Sub ObtenerActividad()
  
  Dim rs As Result
  Dim consulta As String
  
  EdulibCap.lst_iconos.Clear
      
    consulta = "SELECT a.idtbl_actividad, a.nombre, p.url_icono " &
              "FROM tbl_actividad a, " &
              "tbl_programa p " &
              "WHERE a.id_programa = p.idtbl_programa " &
              "ORDER BY nombre ASC "
                
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
          If rs["url_icono"] <> Null And Exist(rs["url_icono"]) Then
              EdulibCap.lst_iconos.Add(rs["idtbl_actividad"], rs["nombre"], Picture.Load(rs["url_icono"]).Image.Stretch(30, 30).Picture)
          Else
               EdulibCap.lst_iconos.Add(rs["idtbl_actividad"], rs["nombre"], Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(30, 30).Picture)
          Endif
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub ObtenerActividad_Nombre(Programa As String)
  
  Dim rs As Result
  Dim consulta As String
  
  EdulibCap.lst_iconos.Clear
      
    consulta = "SELECT a.idtbl_actividad, a.nombre, p.url_icono " &
              "FROM tbl_actividad a, " &
              "tbl_programa p " &
              "WHERE p.descripcion = '" & Programa & "' " &
              "AND a.id_programa = p.idtbl_programa " &
              "ORDER BY nombre ASC "
    'Print consulta         
    cone = MDB_Connection.Conectar()
    
    rs = cone.Exec(consulta)
       While (rs.Available)
          If rs["url_icono"] <> Null And Exist(rs["url_icono"]) Then
              EdulibCap.lst_iconos.Add(rs["idtbl_actividad"], rs["nombre"], Picture.Load(rs["url_icono"]).Image.Stretch(30, 30).Picture)
          Else
               EdulibCap.lst_iconos.Add(rs["idtbl_actividad"], rs["nombre"], Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(30, 30).Picture)
          Endif
             rs.MoveNext
       Wend
  MDB_Connection.Desconectar(cone)
End

Public Sub LlenarGvInfo(id_actividad As String)
  
    Dim rs As Result
    Dim consulta As String
    Dim crow As Integer
    
    consulta = "SELECT distinct c.descripcion as Categoria, " &
               					"p.descripcion As Programa, " &
               					"a.nombre As Actividad, " &
               					"n.descripcion As Nivel, " &
               					"g.descripcion As Grado, " &
               					"m.descripcion As Materia, " &
               					"cg.no_competencia As NoCompetencia, " &
               					"cg.descripcion As Competencia, " &
               					"ig.no_indicador_grado As NoIndicador, " &
               					"ig.descripcion As Indicador, " &
               					"cont.no_contenido As NoContenido, " &
               					"cont.descripcion As Contenido, " &
               					"p.url_icono As Icono, " &
               					"p.url_exe As Url_exe " &
              "FROM tbl_actividad a, " &
              		"tbl_grado_materia gm, " &
              		"tbl_grado g, " &
              		"tbl_materia m, " &
              		"tbl_nivel n, " &
              		"tbl_programa p, " &
              		"tbl_categoria c, " &
              		"tbl_competencia_grado cg, " &
              		"tbl_indicador_grado ig, " &
              		"tbl_contenido cont " &
              "WHERE a.idtbl_actividad = " & id_actividad & " " &
              "AND a.idtbl_actividad = gm.id_actividad " &
              "AND gm.id_grado = g.idtbl_grado " &
              "AND gm.id_materia = m.idtbl_materia " &
              "AND g.id_nivel = n.idtbl_nivel " &
              "AND a.id_programa = p.idtbl_programa " &
              "AND p.id_categoria = c.idtbl_categoria " &
              "AND cg.id_actividad = a.idtbl_actividad " &
              "AND ig.id_competencia_grado = cg.idtbl_competencia_grado " &
              "AND cont.id_indicador_grado = ig.idtbl_indicador_grado "

    cone = MDB_Connection.Conectar()
    
            EdulibCap.lst_iconos[id_actividad].Selected = True
            EdulibCap.gvinfo.Columns.count = 6
            EdulibCap.gvinfo.Rows.Resizable = True
            EdulibCap.gvinfo.Columns.Resizable = True
            EdulibCap.gvinfo.Columns[0].Text = "No."
            EdulibCap.gvinfo.Columns[0].Width = 40
            EdulibCap.gvinfo.Columns[0].Alignment = Align.Center
            EdulibCap.gvinfo.Columns[1].Text = "Competencia de Grado"
            EdulibCap.gvinfo.Columns[1].Alignment = Align.Center
            EdulibCap.gvinfo.Columns[1].Width = 200
            EdulibCap.gvinfo.Columns[2].Text = "No."
            EdulibCap.gvinfo.Columns[2].Width = 40
            EdulibCap.gvinfo.Columns[2].Alignment = Align.Center
            EdulibCap.gvinfo.Columns[3].Text = "Indicador de Logro"
            EdulibCap.gvinfo.Columns[3].Alignment = Align.Center
            EdulibCap.gvinfo.Columns[3].Width = 200
            EdulibCap.gvinfo.Columns[4].Text = "No."
            EdulibCap.gvinfo.Columns[4].Width = 40
            EdulibCap.gvinfo.Columns[4].Alignment = Align.Center
            EdulibCap.gvinfo.Columns[5].Text = "Contenido"
            EdulibCap.gvinfo.Columns[5].Alignment = Align.Center
            crow = 0
    
    rs = cone.Exec(consulta)
    
       While (rs.Available)
             EdulibCap.gvinfo.Rows.count = crow + 1
             EdulibCap.gvinfo.rows[crow].Height = 170
             EdulibCap.lbl_categoria_edit.Text = rs["Categoria"]
             EdulibCap.lbl_programa_edit.Text = rs["Programa"]
             EdulibCap.lbl_actividad_edit.Text = rs["Actividad"]
             EdulibCap.lbl_nivel_edit.Text = rs["Nivel"]
             EdulibCap.lbl_grado_edit.Text = rs["Grado"]
             EdulibCap.lbl_materia_edit.Text = rs["Materia"]
             EdulibCap.gvinfo[crow, 0].Text = rs["NoCompetencia"]
             EdulibCap.gvinfo[crow, 0].WordWrap = True
             EdulibCap.gvinfo[crow, 0].Alignment = Align.left
             EdulibCap.gvinfo[crow, 1].Text = rs["Competencia"]
             EdulibCap.gvinfo[crow, 1].WordWrap = True
             EdulibCap.gvinfo[crow, 1].Alignment = Align.left
             EdulibCap.gvinfo[crow, 2].Text = rs["NoIndicador"]
             EdulibCap.gvinfo[crow, 2].WordWrap = True
             EdulibCap.gvinfo[crow, 2].Alignment = Align.left
             EdulibCap.gvinfo[crow, 3].Text = rs["Indicador"]
             EdulibCap.gvinfo[crow, 3].WordWrap = True
             EdulibCap.gvinfo[crow, 3].Alignment = Align.left
             EdulibCap.gvinfo[crow, 4].Text = rs["NoContenido"]
             EdulibCap.gvinfo[crow, 4].WordWrap = True
             EdulibCap.gvinfo[crow, 4].Alignment = Align.left
             EdulibCap.gvinfo[crow, 5].Text = rs["Contenido"]
             EdulibCap.gvinfo[crow, 5].WordWrap = True
             EdulibCap.gvinfo[crow, 5].Alignment = Align.left
             If rs["Icono"] <> Null And Exist(rs["Icono"]) Then
                  EdulibCap.btn_programa.Picture = Picture.Load(rs["Icono"]).Image.Stretch(40, 40).Picture
              Else
                  EdulibCap.btn_programa.Picture = Picture.Load(Application.Path & "/Images/edulogo.jpeg").Image.Stretch(40, 40).Picture
              Endif
             EdulibCap.lblprogexe.Text = rs["Url_exe"]
             crow = crow + 1
             rs.MoveNext
       Wend    
  MDB_Connection.Desconectar(cone)
  ObtenerImagen(id_actividad)
  
End
